var EventEmitter=require("events").EventEmitter;var debug=require("debug")("engine:socket");module.exports=Socket;function Socket(d,b,c,a){this.id=d;this.server=b;this.upgraded=false;this.readyState="opening";this.writeBuffer=[];this.packetsFn=[];this.sentCallbackFn=[];this.request=a;this.checkIntervalTimer=null;this.upgradeTimeoutTimer=null;this.pingTimeoutTimer=null;this.setTransport(c);this.onOpen()}Socket.prototype.__proto__=EventEmitter.prototype;Socket.prototype.onOpen=function(){this.readyState="open";this.transport.sid=this.id;this.sendPacket("open",JSON.stringify({sid:this.id,upgrades:this.getAvailableUpgrades(),pingInterval:this.server.pingInterval,pingTimeout:this.server.pingTimeout}));this.emit("open");this.setPingTimeout()};Socket.prototype.onPacket=function(a){if("open"==this.readyState){debug("packet");this.emit("packet",a);this.setPingTimeout();switch(a.type){case"ping":debug("got ping");this.sendPacket("pong");this.emit("heartbeat");break;case"error":this.onClose("parse error");break;case"message":this.emit("data",a.data);this.emit("message",a.data);break}}else{debug("packet received with closed socket")}};Socket.prototype.onError=function(a){debug("transport error");this.onClose("transport error",a)};Socket.prototype.setPingTimeout=function(){var a=this;clearTimeout(a.pingTimeoutTimer);a.pingTimeoutTimer=setTimeout(function(){a.onClose("ping timeout")},a.server.pingInterval+a.server.pingTimeout)};Socket.prototype.setTransport=function(a){this.transport=a;this.transport.once("error",this.onError.bind(this));this.transport.on("packet",this.onPacket.bind(this));this.transport.on("drain",this.flush.bind(this));this.transport.once("close",this.onClose.bind(this,"transport close"));this.setupSendCallback()};Socket.prototype.maybeUpgrade=function(d){debug('might upgrade socket transport from "%s" to "%s"',this.transport.name,d.name);var c=this;c.upgradeTimeoutTimer=setTimeout(function(){debug("client did not complete upgrade - closing transport");clearInterval(c.checkIntervalTimer);c.checkIntervalTimer=null;if("open"==d.readyState){d.close()}},this.server.upgradeTimeout);function a(e){if("ping"==e.type&&"probe"==e.data){d.send([{type:"pong",data:"probe"}]);clearInterval(c.checkIntervalTimer);c.checkIntervalTimer=setInterval(b,100)}else{if("upgrade"==e.type&&c.readyState=="open"){debug("got upgrade packet - upgrading");c.upgraded=true;c.clearTransport();c.setTransport(d);c.emit("upgrade",d);c.setPingTimeout();c.flush();clearInterval(c.checkIntervalTimer);c.checkIntervalTimer=null;clearTimeout(c.upgradeTimeoutTimer);d.removeListener("packet",a)}else{d.close()}}}function b(){if("polling"==c.transport.name&&c.transport.writable){debug("writing a noop packet to polling for fast upgrade");c.transport.send([{type:"noop"}])}}d.on("packet",a)};Socket.prototype.clearTransport=function(){this.transport.on("error",function(){debug("error triggered by discarded transport")});clearTimeout(this.pingTimeoutTimer)};Socket.prototype.onClose=function(c,b){if("closed"!=this.readyState){clearTimeout(this.pingTimeoutTimer);clearInterval(this.checkIntervalTimer);this.checkIntervalTimer=null;clearTimeout(this.upgradeTimeoutTimer);var a=this;process.nextTick(function(){a.writeBuffer=[]});this.packetsFn=[];this.sentCallbackFn=[];this.clearTransport();this.readyState="closed";this.emit("close",c,b)}};Socket.prototype.setupSendCallback=function(){var a=this;this.transport.on("drain",function(){if(a.sentCallbackFn.length>0){var d=a.sentCallbackFn.splice(0,1)[0];if("function"==typeof d){debug("executing send callback");d(a.transport)}else{if(Array.isArray(d)){debug("executing batch send callback");for(var b=d.length,c=0;c<b;c++){if("function"==typeof d[c]){d[c](a.transport)}}}}}})};Socket.prototype.send=Socket.prototype.write=function(a,b){this.sendPacket("message",a,b);return this};Socket.prototype.sendPacket=function(a,b,d){if("closing"!=this.readyState){debug('sending packet "%s" (%s)',a,b);var c={type:a};if(b){c.data=b}this.emit("packetCreate",c);this.writeBuffer.push(c);this.packetsFn.push(d);this.flush()}};Socket.prototype.flush=function(){if("closed"!=this.readyState&&this.transport.writable&&this.writeBuffer.length){debug("flushing buffer to transport");this.emit("flush",this.writeBuffer);this.server.emit("flush",this,this.writeBuffer);var a=this.writeBuffer;this.writeBuffer=[];if(!this.transport.supportsFraming){this.sentCallbackFn.push(this.packetsFn)}else{this.sentCallbackFn.push.apply(this.sentCallbackFn,this.packetsFn)}this.packetsFn=[];this.transport.send(a);this.emit("drain");this.server.emit("drain",this)}};Socket.prototype.getAvailableUpgrades=function(){var b=[];var e=this.server.upgrades(this.transport.name);for(var d=0,a=e.length;d<a;++d){var c=e[d];if(this.server.transports.indexOf(c)!=-1){b.push(c)}}return b};Socket.prototype.close=function(){if("open"==this.readyState){this.readyState="closing";var a=this;this.transport.close(function(){a.onClose("forced close")})}};